---
- hosts: worker_nodes
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  - name: Add an apt signing key for Docker
    get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker-archive-keyring.asc
      mode: '0644'
      force: true    
  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-archive-keyring.asc] https://download.docker.com/linux/ubuntu xenial stable
      state: present
      filename: docker
  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd
    notify:
      - docker status
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0      
  - name: Add kubernetes gpg key
    get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /etc/apt/keyrings/kubernetes-archive-keyring.asc
      mode: '0644'
      force: true
  - name: Add kubernetes apt repository
    apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.asc] https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes
  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm 
        - kubectl      
  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ inventory_hostname }}
      create: true
  - name: enable br_netfilter
    shell: modprobe br_netfilter
  - name: Add sysctl conf
    sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
      sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
      state: present
    with_items:
      - name: net.ipv4.ip_forward
        value: "1"
      - name: net.bridge.bridge-nf-call-iptables
        value: "1"
      - name: net.bridge.bridge-nf-call-ip6tables
        value: "1"      
  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted    
  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777
  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
  handlers:
  - name: docker status
    service: name=docker state=started
